{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///Users/biostochastics/Development/GitHub/DoseFinder/dosefinder/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-transparent px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAKA,MAAM,sBAAQ,8JAAM,UAAU,MAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iWACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 64, "column": 0}, "map": {"version":3,"sources":["file:///Users/biostochastics/Development/GitHub/DoseFinder/dosefinder/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AAEA;AAEA;AAHA;AAHA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,8JAAM,UAAU,MAI5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAe,IAAI;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,qKAAe,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file:///Users/biostochastics/Development/GitHub/DoseFinder/dosefinder/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-transparent px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md animate-in fade-in-80\",\n        position === \"popper\" && \"translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAEA;AAIA;AAHA;AACA;AAAA;AAJA;;;;;;AAQA,MAAM,SAAS,sKAAgB,IAAI;AAEnC,MAAM,cAAc,sKAAgB,KAAK;AAEzC,MAAM,cAAc,sKAAgB,KAAK;AAEzC,MAAM,8BAAgB,8JAAM,UAAU,MAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,sKAAgB,OAAO;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8RACA;QAED,GAAG,KAAK;;YAER;0BACD,6LAAC,sKAAgB,IAAI;gBAAC,OAAO;0BAC3B,cAAA,6LAAC,uNAAA,CAAA,cAAW;oBAAC,WAAU;;;;;;;;;;;;;;;;;;AAI7B,cAAc,WAAW,GAAG,sKAAgB,OAAO,CAAC,WAAW;AAE/D,MAAM,8BAAgB,8JAAM,UAAU,OAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACzD,6LAAC,sKAAgB,MAAM;kBACrB,cAAA,6LAAC,sKAAgB,OAAO;YACtB,KAAK;YACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mIACA,aAAa,YAAY,iBACzB;YAEF,UAAU;YACT,GAAG,KAAK;sBAET,cAAA,6LAAC,sKAAgB,QAAQ;gBACvB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,OACA,aAAa,YACX;0BAGH;;;;;;;;;;;;;;;;;AAKT,cAAc,WAAW,GAAG,sKAAgB,OAAO,CAAC,WAAW;AAE/D,MAAM,4BAAc,8JAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,sKAAgB,KAAK;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,0CAA0C;QACvD,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,sKAAgB,KAAK,CAAC,WAAW;AAE3D,MAAM,2BAAa,8JAAM,UAAU,OAGjC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,sKAAgB,IAAI;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,6NACA;QAED,GAAG,KAAK;;0BAET,6LAAC;gBAAK,WAAU;0BACd,cAAA,6LAAC,sKAAgB,aAAa;8BAC5B,cAAA,6LAAC,uMAAA,CAAA,QAAK;wBAAC,WAAU;;;;;;;;;;;;;;;;0BAIrB,6LAAC,sKAAgB,QAAQ;0BAAE;;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,sKAAgB,IAAI,CAAC,WAAW;AAEzD,MAAM,gCAAkB,8JAAM,UAAU,OAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,sKAAgB,SAAS;QACxB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG,sKAAgB,SAAS,CAAC,WAAW"}},
    {"offset": {"line": 259, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 265, "column": 0}, "map": {"version":3,"sources":["file:///Users/biostochastics/Development/GitHub/DoseFinder/dosefinder/src/components/ui/switch.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-[24px] w-[44px] shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n"],"names":[],"mappings":";;;;AAEA;AAGA;AAFA;AAHA;;;;;AAOA,MAAM,uBAAS,8JAAM,UAAU,MAG7B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,sKAAiB,IAAI;QACpB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+XACA;QAED,GAAG,KAAK;QACT,KAAK;kBAEL,cAAA,6LAAC,sKAAiB,KAAK;YACrB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV;;;;;;;;;;;;AAKR,OAAO,WAAW,GAAG,sKAAiB,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 302, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 313, "column": 0}, "map": {"version":3,"sources":["file:///Users/biostochastics/Development/GitHub/DoseFinder/dosefinder/src/components/ui/popover.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none animate-in data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n"],"names":[],"mappings":";;;;;;AAEA;AAGA;AAFA;AAHA;;;;;AAOA,MAAM,UAAU,uKAAiB,IAAI;AAErC,MAAM,iBAAiB,uKAAiB,OAAO;AAE/C,MAAM,+BAAiB,8JAAM,UAAU,MAGrC,CAAC,EAAE,SAAS,EAAE,QAAQ,QAAQ,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC5D,6LAAC,uKAAiB,MAAM;kBACtB,cAAA,6LAAC,uKAAiB,OAAO;YACvB,KAAK;YACL,OAAO;YACP,YAAY;YACZ,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,oQACA;YAED,GAAG,KAAK;;;;;;;;;;;;AAIf,eAAe,WAAW,GAAG,uKAAiB,OAAO,CAAC,WAAW"}},
    {"offset": {"line": 355, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 361, "column": 0}, "map": {"version":3,"sources":["file:///Users/biostochastics/Development/GitHub/DoseFinder/dosefinder/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { useState, useEffect } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/components/ui/popover\";\nimport { Sun, Moon, Info } from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer\n} from 'recharts';\n\ninterface CalculationSteps {\n  weightRatio: number;\n  scaledFactor: number;\n  calculatedDose: number;\n  finalDose: number;\n  steps: string[];\n}\n\nexport default function Home() {\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [sourceAnimal, setSourceAnimal] = useState<string>('mouse');\n  const [targetAnimal, setTargetAnimal] = useState<string>('rat');\n  const [sourceWeight, setSourceWeight] = useState<string>('0.02');\n  const [targetWeight, setTargetWeight] = useState<string>('0.2');\n  const [baseDose, setBaseDose] = useState<string>('10');\n  const [scalingMethod, setScalingMethod] = useState<string>('allometric');\n  const [calculatedDose, setCalculatedDose] = useState<number | null>(null);\n  const [chartData, setChartData] = useState<any[]>([]);\n  const [proteinBinding, setProteinBinding] = useState(0);\n  const [volumeDistribution, setVolumeDistribution] = useState(0);\n  const [clearanceRate, setClearanceRate] = useState(0);\n  const [bioavailability, setBioavailability] = useState(100);\n  const [kidneyFunction, setKidneyFunction] = useState(100);\n  const [molecularWeight, setMolecularWeight] = useState(0);\n  const [logP, setLogP] = useState(0);\n  const [showDilution, setShowDilution] = useState(false);\n  const [dilutionFactor, setDilutionFactor] = useState(\"1\");\n  const [calculationSteps, setCalculationSteps] = useState<CalculationSteps | null>(null);\n\n  // Predefined animals with average weights\n  const animals = {\n    mouse: {\n      name: 'Mouse',\n      weight: 0.02,\n      brainWeight: 0.4,\n      lifeSpan: 2,\n      hepaticFlow: 90,\n    },\n    rat: {\n      name: 'Rat',\n      weight: 0.15,\n      brainWeight: 2,\n      lifeSpan: 3,\n      hepaticFlow: 80,\n    },\n    rabbit: {\n      name: 'Rabbit',\n      weight: 2,\n      brainWeight: 10,\n      lifeSpan: 9,\n      hepaticFlow: 65,\n    },\n    cat: {\n      name: 'Cat',\n      weight: 4,\n      brainWeight: 30,\n      lifeSpan: 15,\n      hepaticFlow: 60,\n    },\n    monkey: {\n      name: 'Monkey',\n      weight: 5,\n      brainWeight: 90,\n      lifeSpan: 25,\n      hepaticFlow: 60,\n    },\n    dog: {\n      name: 'Dog',\n      weight: 20,\n      brainWeight: 80,\n      lifeSpan: 13,\n      hepaticFlow: 60,\n    },\n    sheep: {\n      name: 'Sheep',\n      weight: 40,\n      brainWeight: 130,\n      lifeSpan: 12,\n      hepaticFlow: 40,\n    },\n    pig: {\n      name: 'Pig',\n      weight: 60,\n      brainWeight: 180,\n      lifeSpan: 15,\n      hepaticFlow: 50,\n    },\n    human: {\n      name: 'Human',\n      weight: 70,\n      brainWeight: 1400,\n      lifeSpan: 80,\n      hepaticFlow: 60,\n    },\n    horse: {\n      name: 'Horse',\n      weight: 500,\n      brainWeight: 600,\n      lifeSpan: 30,\n      hepaticFlow: 30,\n    },\n    cow: {\n      name: 'Cow',\n      weight: 650,\n      brainWeight: 450,\n      lifeSpan: 20,\n      hepaticFlow: 30,\n    },\n  };\n\n  // Update dilution factor with validation\n  const handleDilutionChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    // Ensure value is not empty and is a positive number\n    if (value === '' || Number(value) <= 0) {\n      setDilutionFactor(\"1\");\n    } else {\n      setDilutionFactor(value);\n    }\n  };\n\n  // Update source/target weights when animals change\n  useEffect(() => {\n    setSourceWeight(animals[sourceAnimal as keyof typeof animals].weight.toString());\n  }, [sourceAnimal]);\n\n  useEffect(() => {\n    setTargetWeight(animals[targetAnimal as keyof typeof animals].weight.toString());\n  }, [targetAnimal]);\n\n  // Calculate dose based on selected method\n  const calculateDose = (baseWeight: number, targetWeight: number, baseDose: number, method: string, sourceAnimal: string, targetAnimal: string) => {\n    const weightRatio = targetWeight / baseWeight;\n    let scalingFactor = 0;\n    let methodDescription = '';\n    let dose = 0;\n    \n    switch (method) {\n      case 'allometric':\n        scalingFactor = 0.75;\n        methodDescription = 'Using allometric scaling (weight^0.75)';\n        break;\n      case 'brainWeight':\n        const sourceBrain = animals[sourceAnimal as keyof typeof animals].brainWeight;\n        const targetBrain = animals[targetAnimal as keyof typeof animals].brainWeight;\n        scalingFactor = 0.75 * (Math.log(targetBrain) / Math.log(sourceBrain));\n        methodDescription = 'Using brain weight scaling';\n        break;\n      case 'lifeSpan':\n        const sourceLife = animals[sourceAnimal as keyof typeof animals].lifeSpan;\n        const targetLife = animals[targetAnimal as keyof typeof animals].lifeSpan;\n        scalingFactor = Math.log10(targetLife / sourceLife) / Math.log10(weightRatio);\n        methodDescription = 'Using life-span scaling';\n        break;\n      case 'hepaticFlow':\n        const sourceFlow = animals[sourceAnimal as keyof typeof animals].hepaticFlow;\n        const targetFlow = animals[targetAnimal as keyof typeof animals].hepaticFlow;\n        scalingFactor = Math.log10(targetFlow / sourceFlow) / Math.log10(weightRatio);\n        methodDescription = 'Using hepatic blood flow scaling';\n        break;\n    }\n\n    // Calculate base scaled dose\n    dose = baseDose * Math.pow(weightRatio, scalingFactor);\n\n    // Apply adjustments\n    if (proteinBinding > 0) {\n      dose = dose * ((100 - proteinBinding) / 100);\n    }\n    if (bioavailability > 0) {\n      dose = dose * (bioavailability / 100);\n    }\n    if (kidneyFunction > 0 && kidneyFunction < 100) {\n      dose = dose * (1 + ((100 - kidneyFunction) / 100));\n    }\n    if (volumeDistribution > 0) {\n      dose = dose * (1 + Math.log10(volumeDistribution));\n    }\n\n    return { dose, scalingFactor, methodDescription };\n  };\n\n  const updateCalculationSteps = (baseWeight: number, targetWeight: number, baseDose: number, method: string) => {\n    const weightRatio = targetWeight / baseWeight;\n    const result = calculateDose(baseWeight, targetWeight, baseDose, method, sourceAnimal, targetAnimal);\n    \n    let steps: string[] = [\n      `1. Weight Ratio = Target Weight / Source Weight`,\n      `   = ${targetWeight.toFixed(3)} kg / ${baseWeight.toFixed(3)} kg`,\n      `   = ${weightRatio.toFixed(4)}`,\n      `2. Scaling Factor = ${result.scalingFactor.toFixed(4)}`,\n      `3. Base Scaled Dose = ${baseDose} mg × (Weight Ratio ^ Scaling Factor)`,\n      `   = ${baseDose} × (${weightRatio.toFixed(4)} ^ ${result.scalingFactor.toFixed(4)})`,\n      `   = ${(baseDose * Math.pow(weightRatio, result.scalingFactor)).toFixed(4)} mg`\n    ];\n\n    // Add adjustment steps\n    if (proteinBinding > 0) {\n      steps.push(`4. Protein Binding Adjustment: × ${((100 - proteinBinding) / 100).toFixed(2)}`);\n    }\n    if (bioavailability > 0) {\n      steps.push(`5. Bioavailability Adjustment: × ${(bioavailability / 100).toFixed(2)}`);\n    }\n    if (kidneyFunction > 0 && kidneyFunction < 100) {\n      steps.push(`6. Kidney Function Adjustment: × ${(1 + ((100 - kidneyFunction) / 100)).toFixed(2)}`);\n    }\n    if (volumeDistribution > 0) {\n      steps.push(`7. Volume Distribution Adjustment: × ${(1 + Math.log10(volumeDistribution)).toFixed(2)}`);\n    }\n\n    steps.push(`Final Dose = ${result.dose.toFixed(2)} mg`);\n\n    return steps;\n  };\n\n  const updateResults = () => {\n    const baseWeightNum = Number(sourceWeight);\n    const targetWeightNum = Number(targetWeight);\n    const baseDoseNum = Number(baseDose);\n    const result = calculateDose(baseWeightNum, targetWeightNum, baseDoseNum, scalingMethod, sourceAnimal, targetAnimal);\n    setCalculatedDose(result.dose);\n\n    // Update calculation steps\n    setCalculationSteps({\n      weightRatio: targetWeightNum / baseWeightNum,\n      scaledFactor: Math.pow(targetWeightNum / baseWeightNum, result.scalingFactor),\n      calculatedDose: result.dose,\n      finalDose: result.dose * Number(dilutionFactor),\n      steps: updateCalculationSteps(baseWeightNum, targetWeightNum, baseDoseNum, scalingMethod)\n    });\n\n    // Generate smooth curve points\n    const points = [];\n    const logMin = Math.log10(0.01);  // 10g\n    const logMax = Math.log10(1000);  // 1000kg\n    const steps = 100;\n    \n    for (let i = 0; i <= steps; i++) {\n      const step = (logMax - logMin) / steps;\n      const weight = Math.pow(10, logMin + step * i);\n      points.push({\n        weight: Number(weight.toFixed(3)),\n        dose: calculateDose(baseWeightNum, weight, baseDoseNum, scalingMethod, sourceAnimal, targetAnimal).dose,\n        name: undefined\n      });\n    }\n\n    // Add specific animal points\n    Object.entries(animals).forEach(([key, animal]) => {\n      points.push({\n        weight: animal.weight,\n        dose: calculateDose(baseWeightNum, animal.weight, baseDoseNum, scalingMethod, sourceAnimal, targetAnimal).dose,\n        name: animal.name\n      });\n    });\n\n    setChartData(points);\n  };\n\n  useEffect(() => {\n    updateResults();\n  }, [sourceAnimal, targetAnimal, sourceWeight, targetWeight, baseDose, scalingMethod,\n      proteinBinding, bioavailability, kidneyFunction, dilutionFactor]);\n\n  useEffect(() => {\n    if (isDarkMode) {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n  }, [isDarkMode]);\n\n  return (\n    <div className=\"flex flex-col min-h-screen\">\n      <main className=\"container mx-auto p-4 max-w-5xl flex-grow\">\n        <div className=\"space-y-6\">\n          <Card>\n            <CardHeader className=\"space-y-1\">\n              <div className=\"flex justify-between items-center\">\n                <CardTitle className=\"text-2xl\">DoseFinder</CardTitle>\n                <div className=\"flex items-center space-x-2\">\n                  <Popover>\n                    <PopoverTrigger asChild>\n                      <Button variant=\"ghost\" size=\"icon\" className=\"rounded-full\">\n                        <Info className=\"h-5 w-5\" />\n                      </Button>\n                    </PopoverTrigger>\n                    <PopoverContent className=\"w-[450px] p-4\" align=\"end\">\n                      <div className=\"space-y-4 text-sm\">\n                        <h4 className=\"font-medium leading-none\">Disclaimer</h4>\n                        <p>DoseFinder is a Simple Allometric Scaling Calculator (\"the Calculator\") by BioStochastics and is not intended for clinical or therapeutic dosing. The Calculator is intended for informational and educational purposes only.</p>\n                        \n                        <p>This Calculator is not a substitute for professional medical, pharmacological, toxicological, or veterinary advice. Consult qualified professionals before making decisions based on its outputs.</p>\n                        \n                        <p>Calculations are for research purposes and should not be used for clinical or therapeutic dosing without professional oversight.</p>\n                        \n                        <p className=\"font-medium pt-2\">Contact Information</p>\n                        <p>Email: sergey.kornilov@biostochastics.com</p>\n                        \n                        <p className=\"text-xs text-muted-foreground\">By using this calculator, you agree to our terms and assume full responsibility for its use.</p>\n                      </div>\n                    </PopoverContent>\n                  </Popover>\n                  <Button\n                    variant=\"ghost\"\n                    size=\"icon\"\n                    onClick={() => setIsDarkMode(!isDarkMode)}\n                    className={cn(\n                      \"rounded-full\",\n                      isDarkMode && \"hover:bg-slate-800\"\n                    )}\n                  >\n                    {isDarkMode ? <Sun className=\"h-5 w-5\" /> : <Moon className=\"h-5 w-5\" />}\n                  </Button>\n                </div>\n              </div>\n              <CardDescription>\n                Calculate and visualize pharmacological dose scaling across different species\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <Tabs defaultValue=\"basic\" className=\"w-full\">\n                <TabsList className=\"grid w-full grid-cols-2\">\n                  <TabsTrigger value=\"basic\">Basic Parameters</TabsTrigger>\n                  <TabsTrigger value=\"advanced\">Advanced Parameters</TabsTrigger>\n                </TabsList>\n                <TabsContent value=\"basic\">\n                  <div className=\"space-y-4\">\n                    <div className=\"grid grid-cols-2 gap-4\">\n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"sourceAnimal\">Source Animal</Label>\n                        <Select value={sourceAnimal} onValueChange={setSourceAnimal}>\n                          <SelectTrigger id=\"sourceAnimal\">\n                            <SelectValue placeholder=\"Select source animal\" />\n                          </SelectTrigger>\n                          <SelectContent>\n                            {Object.entries(animals).map(([key, animal]) => (\n                              <SelectItem key={key} value={key}>\n                                {animal.name} ({animal.weight} kg)\n                              </SelectItem>\n                            ))}\n                          </SelectContent>\n                        </Select>\n                        <Label htmlFor=\"sourceWeight\">Source Weight (kg)</Label>\n                        <Input\n                          id=\"sourceWeight\"\n                          type=\"number\"\n                          value={sourceWeight}\n                          onChange={(e) => setSourceWeight(e.target.value)}\n                          min=\"0.01\"\n                          step=\"0.01\"\n                          placeholder=\"Enter source weight\"\n                        />\n                        <Label htmlFor=\"baseDose\">Base Dose (mg)</Label>\n                        <Input\n                          id=\"baseDose\"\n                          type=\"number\"\n                          value={baseDose}\n                          onChange={(e) => setBaseDose(e.target.value)}\n                          min=\"0\"\n                          step=\"0.1\"\n                          placeholder=\"Enter base dose\"\n                        />\n                      </div>\n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"targetAnimal\">Target Animal</Label>\n                        <Select value={targetAnimal} onValueChange={setTargetAnimal}>\n                          <SelectTrigger id=\"targetAnimal\">\n                            <SelectValue placeholder=\"Select target animal\" />\n                          </SelectTrigger>\n                          <SelectContent>\n                            {Object.entries(animals).map(([key, animal]) => (\n                              <SelectItem key={key} value={key}>\n                                {animal.name} ({animal.weight} kg)\n                              </SelectItem>\n                            ))}\n                          </SelectContent>\n                        </Select>\n                        <Label htmlFor=\"targetWeight\">Target Weight (kg)</Label>\n                        <Input\n                          id=\"targetWeight\"\n                          type=\"number\"\n                          value={targetWeight}\n                          onChange={(e) => setTargetWeight(e.target.value)}\n                          min=\"0.01\"\n                          step=\"0.01\"\n                          placeholder=\"Enter target weight\"\n                        />\n                        <div className=\"pt-2\">\n                          <Label>Calculated Dose</Label>\n                          <div className=\"text-2xl font-bold text-primary\">\n                            {calculatedDose !== null ? `${calculatedDose.toFixed(2)} mg` : '-'}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"space-y-2 mt-4\">\n                      <Label htmlFor=\"scalingMethod\">Scaling Method</Label>\n                      <Select value={scalingMethod} onValueChange={setScalingMethod}>\n                        <SelectTrigger id=\"scalingMethod\">\n                          <SelectValue placeholder=\"Select scaling method\" />\n                        </SelectTrigger>\n                        <SelectContent>\n                          <SelectItem value=\"allometric\">Allometric</SelectItem>\n                          <SelectItem value=\"brainWeight\">Brain Weight</SelectItem>\n                          <SelectItem value=\"lifeSpan\">Life-Span</SelectItem>\n                          <SelectItem value=\"hepaticFlow\">Hepatic Blood Flow</SelectItem>\n                        </SelectContent>\n                      </Select>\n                    </div>\n                  </div>\n                </TabsContent>\n                <TabsContent value=\"advanced\">\n                  <div className=\"space-y-4\">\n                    <div className=\"grid grid-cols-2 gap-4\">\n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"proteinBinding\">Protein Binding (%)</Label>\n                        <Input\n                          id=\"proteinBinding\"\n                          type=\"number\"\n                          value={proteinBinding}\n                          onChange={(e) => setProteinBinding(Number(e.target.value))}\n                          min=\"0\"\n                          max=\"100\"\n                          step=\"1\"\n                          placeholder=\"Enter protein binding %\"\n                        />\n                      </div>\n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"bioavailability\">Bioavailability (%)</Label>\n                        <Input\n                          id=\"bioavailability\"\n                          type=\"number\"\n                          value={bioavailability}\n                          onChange={(e) => setBioavailability(Number(e.target.value))}\n                          min=\"0\"\n                          max=\"100\"\n                          step=\"1\"\n                          placeholder=\"Enter bioavailability %\"\n                        />\n                      </div>\n                    </div>\n                    <div className=\"grid grid-cols-2 gap-4\">\n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"kidneyFunction\">Kidney Function (%)</Label>\n                        <Input\n                          id=\"kidneyFunction\"\n                          type=\"number\"\n                          value={kidneyFunction}\n                          onChange={(e) => setKidneyFunction(Number(e.target.value))}\n                          min=\"0\"\n                          max=\"100\"\n                          step=\"1\"\n                          placeholder=\"Enter kidney function %\"\n                        />\n                      </div>\n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"volumeDistribution\">Volume of Distribution (L/kg)</Label>\n                        <Input\n                          id=\"volumeDistribution\"\n                          type=\"number\"\n                          value={volumeDistribution}\n                          onChange={(e) => setVolumeDistribution(Number(e.target.value))}\n                          min=\"0\"\n                          step=\"0.1\"\n                          placeholder=\"Enter Vd L/kg\"\n                        />\n                      </div>\n                    </div>\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"molecularWeight\">Molecular Weight (g/mol)</Label>\n                      <Input\n                        id=\"molecularWeight\"\n                        type=\"number\"\n                        value={molecularWeight}\n                        onChange={(e) => setMolecularWeight(Number(e.target.value))}\n                        min=\"0\"\n                        step=\"0.1\"\n                        placeholder=\"Enter molecular weight\"\n                      />\n                    </div>\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"logP\">Log P</Label>\n                      <Input\n                        id=\"logP\"\n                        type=\"number\"\n                        value={logP}\n                        onChange={(e) => setLogP(Number(e.target.value))}\n                        step=\"0.1\"\n                        placeholder=\"Enter Log P\"\n                      />\n                    </div>\n                  </div>\n                </TabsContent>\n              </Tabs>\n\n              <div className=\"mt-8\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>Results</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    <div className=\"grid grid-cols-2 gap-4\">\n                      <div>\n                        <Label>Source Animal</Label>\n                        <div className=\"text-2xl font-bold\">\n                          {animals[sourceAnimal as keyof typeof animals].name}\n                        </div>\n                        <div className=\"text-sm text-muted-foreground\">\n                          {animals[sourceAnimal as keyof typeof animals].weight} kg\n                        </div>\n                      </div>\n                      <div>\n                        <Label>Target Animal</Label>\n                        <div className=\"text-2xl font-bold\">\n                          {animals[targetAnimal as keyof typeof animals].name}\n                        </div>\n                        <div className=\"text-sm text-muted-foreground\">\n                          {animals[targetAnimal as keyof typeof animals].weight} kg\n                        </div>\n                      </div>\n                    </div>\n\n                    {showDilution && Number(dilutionFactor) !== 1 && calculationSteps && (\n                      <div>\n                        <Label>Final Dose with Dilution</Label>\n                        <div className=\"text-2xl font-bold\">\n                          {calculationSteps.finalDose.toFixed(2)} mg\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card className=\"bg-secondary\">\n                <CardContent className=\"pt-6\">\n                  <div className=\"flex items-center space-x-4\">\n                    <div className=\"flex items-center space-x-2\">\n                      <Switch\n                        id=\"dilution\"\n                        checked={showDilution}\n                        onCheckedChange={setShowDilution}\n                        className={cn(\n                          \"bg-primary\",\n                          isDarkMode && \"data-[state=unchecked]:bg-slate-700\"\n                        )}\n                      />\n                      <Label htmlFor=\"dilution\">Show Dilution</Label>\n                    </div>\n                    {showDilution && (\n                      <div className=\"flex items-center space-x-2\">\n                        <Input\n                          id=\"dilutionFactor\"\n                          value={dilutionFactor}\n                          onChange={handleDilutionChange}\n                          type=\"number\"\n                          min=\"0.1\"\n                          step=\"0.1\"\n                          placeholder=\"Enter dilution factor\"\n                          className={cn(\n                            \"max-w-[200px]\",\n                            isDarkMode && \"bg-slate-800 border-slate-700 focus-visible:ring-orange-500 focus-visible:ring-offset-orange-500 text-orange-400\"\n                          )}\n                        />\n                      </div>\n                    )}\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card>\n                <CardHeader>\n                  <CardTitle>Calculation Steps</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-sm space-y-1\">\n                    {calculationSteps?.steps?.map((step, index) => (\n                      <p key={index} className=\"ml-2 font-mono text-xs\">{step}</p>\n                    ))}\n                    {showDilution && Number(dilutionFactor) !== 1 && calculationSteps && (\n                      <p className=\"ml-2 font-mono text-xs\">\n                        {`${calculationSteps.steps.length + 1}. Final Dose with Dilution = ${calculationSteps.calculatedDose.toFixed(4)} × ${dilutionFactor} = ${calculationSteps.finalDose.toFixed(4)} mg`}\n                      </p>\n                    )}\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card className=\"min-h-[700px] mb-6\">\n          <CardHeader>\n            <CardTitle>Dose Scaling Chart</CardTitle>\n          </CardHeader>\n          <CardContent className=\"w-full h-[600px]\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <LineChart \n                data={chartData}\n                margin={{ top: 20, right: 30, left: 20, bottom: 60 }}\n              >\n                <CartesianGrid \n                  strokeDasharray=\"3 3\" \n                  stroke={isDarkMode ? '#333' : '#ccc'}\n                />\n                <XAxis\n                  dataKey=\"weight\"\n                  type=\"number\"\n                  scale=\"log\"\n                  domain={['auto', 'auto']}\n                  tick={{ fontSize: 11 }}\n                  tickFormatter={(value) => {\n                    const animal = Object.values(animals).find(a => Math.abs(a.weight - value) < 0.001);\n                    return animal ? animal.name : '';\n                  }}\n                  angle={90}\n                  textAnchor=\"start\"\n                  height={80}\n                  interval={0}\n                  ticks={Object.values(animals).map(a => a.weight)}\n                />\n                <YAxis\n                  type=\"number\"\n                  domain={['auto', 'auto']}\n                  tick={{ fontSize: 12 }}\n                  tickFormatter={(value) => `${value.toFixed(1)} mg`}\n                />\n                <Tooltip\n                  contentStyle={{\n                    backgroundColor: isDarkMode ? '#1e293b' : 'white',\n                    border: isDarkMode ? '1px solid #334155' : '1px solid #e2e8f0',\n                    borderRadius: '0.5rem',\n                    color: isDarkMode ? '#e2e8f0' : '#1e293b',\n                  }}\n                  itemStyle={{\n                    color: isDarkMode ? '#e2e8f0' : '#1e293b',\n                  }}\n                  labelStyle={{\n                    color: isDarkMode ? '#94a3b8' : '#64748b',\n                    marginBottom: '5px',\n                  }}\n                  formatter={(value: number) => [`${value.toFixed(2)} mg`, 'Dose']}\n                  labelFormatter={(weight: number) => {\n                    const animal = Object.values(animals).find(a => Math.abs(a.weight - weight) < 0.001);\n                    return `Weight: ${weight.toFixed(2)} kg${animal ? ` (${animal.name})` : ''}`;\n                  }}\n                />\n                <Legend \n                  wrapperStyle={{ \n                    fontSize: '11px',\n                    marginTop: '5px',\n                    color: isDarkMode ? '#e2e8f0' : '#1e293b',\n                  }}\n                  verticalAlign=\"bottom\"\n                  align=\"center\"\n                  height={20}\n                  iconSize={8}\n                />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"dose\"\n                  stroke=\"#f97316\"\n                  name={`${scalingMethod.charAt(0).toUpperCase() + scalingMethod.slice(1)} Scaling`}\n                  dot={(props: any) => {\n                    const { payload, cx, cy, index } = props;\n                    const isAnimal = Object.values(animals).some(a => Math.abs(a.weight - payload.weight) < 0.001);\n                    if (!isAnimal) return null;\n                    return (\n                      <circle\n                        key={`dot-${index}`}\n                        cx={cx}\n                        cy={cy}\n                        r={4}\n                        fill=\"#f97316\"\n                        stroke=\"white\"\n                        strokeWidth={2}\n                      />\n                    );\n                  }}\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </CardContent>\n        </Card>\n      </div>\n      </main>\n      <footer className=\"py-4 text-center text-sm text-muted-foreground\">\n        &copy; Biostochastics 2024\n      </footer>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AADA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAdA;;;;;;;;;;;;;AAiCe,SAAS;;IACtB,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IACzD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IACzD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IACzD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IACzD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IACjD,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IAC3D,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IACpE,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAS,EAAE;IACpD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7D,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA2B;IAElF,0CAA0C;IAC1C,MAAM,UAAU;QACd,OAAO;YACL,MAAM;YACN,QAAQ;YACR,aAAa;YACb,UAAU;YACV,aAAa;QACf;QACA,KAAK;YACH,MAAM;YACN,QAAQ;YACR,aAAa;YACb,UAAU;YACV,aAAa;QACf;QACA,QAAQ;YACN,MAAM;YACN,QAAQ;YACR,aAAa;YACb,UAAU;YACV,aAAa;QACf;QACA,KAAK;YACH,MAAM;YACN,QAAQ;YACR,aAAa;YACb,UAAU;YACV,aAAa;QACf;QACA,QAAQ;YACN,MAAM;YACN,QAAQ;YACR,aAAa;YACb,UAAU;YACV,aAAa;QACf;QACA,KAAK;YACH,MAAM;YACN,QAAQ;YACR,aAAa;YACb,UAAU;YACV,aAAa;QACf;QACA,OAAO;YACL,MAAM;YACN,QAAQ;YACR,aAAa;YACb,UAAU;YACV,aAAa;QACf;QACA,KAAK;YACH,MAAM;YACN,QAAQ;YACR,aAAa;YACb,UAAU;YACV,aAAa;QACf;QACA,OAAO;YACL,MAAM;YACN,QAAQ;YACR,aAAa;YACb,UAAU;YACV,aAAa;QACf;QACA,OAAO;YACL,MAAM;YACN,QAAQ;YACR,aAAa;YACb,UAAU;YACV,aAAa;QACf;QACA,KAAK;YACH,MAAM;YACN,QAAQ;YACR,aAAa;YACb,UAAU;YACV,aAAa;QACf;IACF;IAEA,yCAAyC;IACzC,MAAM,uBAAuB,CAAC;QAC5B,MAAM,QAAQ,EAAE,MAAM,CAAC,KAAK;QAC5B,qDAAqD;QACrD,IAAI,UAAU,MAAM,OAAO,UAAU,GAAG;YACtC,kBAAkB;QACpB,OAAO;YACL,kBAAkB;QACpB;IACF;IAEA,mDAAmD;IACnD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;0BAAE;YACR,gBAAgB,OAAO,CAAC,aAAqC,CAAC,MAAM,CAAC,QAAQ;QAC/E;yBAAG;QAAC;KAAa;IAEjB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;0BAAE;YACR,gBAAgB,OAAO,CAAC,aAAqC,CAAC,MAAM,CAAC,QAAQ;QAC/E;yBAAG;QAAC;KAAa;IAEjB,0CAA0C;IAC1C,MAAM,gBAAgB,CAAC,YAAoB,cAAsB,UAAkB,QAAgB,cAAsB;QACvH,MAAM,cAAc,eAAe;QACnC,IAAI,gBAAgB;QACpB,IAAI,oBAAoB;QACxB,IAAI,OAAO;QAEX,OAAQ;YACN,KAAK;gBACH,gBAAgB;gBAChB,oBAAoB;gBACpB;YACF,KAAK;gBACH,MAAM,cAAc,OAAO,CAAC,aAAqC,CAAC,WAAW;gBAC7E,MAAM,cAAc,OAAO,CAAC,aAAqC,CAAC,WAAW;gBAC7E,gBAAgB,OAAO,CAAC,KAAK,GAAG,CAAC,eAAe,KAAK,GAAG,CAAC,YAAY;gBACrE,oBAAoB;gBACpB;YACF,KAAK;gBACH,MAAM,aAAa,OAAO,CAAC,aAAqC,CAAC,QAAQ;gBACzE,MAAM,aAAa,OAAO,CAAC,aAAqC,CAAC,QAAQ;gBACzE,gBAAgB,KAAK,KAAK,CAAC,aAAa,cAAc,KAAK,KAAK,CAAC;gBACjE,oBAAoB;gBACpB;YACF,KAAK;gBACH,MAAM,aAAa,OAAO,CAAC,aAAqC,CAAC,WAAW;gBAC5E,MAAM,aAAa,OAAO,CAAC,aAAqC,CAAC,WAAW;gBAC5E,gBAAgB,KAAK,KAAK,CAAC,aAAa,cAAc,KAAK,KAAK,CAAC;gBACjE,oBAAoB;gBACpB;QACJ;QAEA,6BAA6B;QAC7B,OAAO,WAAW,KAAK,GAAG,CAAC,aAAa;QAExC,oBAAoB;QACpB,IAAI,iBAAiB,GAAG;YACtB,OAAO,OAAO,CAAC,CAAC,MAAM,cAAc,IAAI,GAAG;QAC7C;QACA,IAAI,kBAAkB,GAAG;YACvB,OAAO,OAAO,CAAC,kBAAkB,GAAG;QACtC;QACA,IAAI,iBAAiB,KAAK,iBAAiB,KAAK;YAC9C,OAAO,OAAO,CAAC,IAAK,CAAC,MAAM,cAAc,IAAI,GAAI;QACnD;QACA,IAAI,qBAAqB,GAAG;YAC1B,OAAO,OAAO,CAAC,IAAI,KAAK,KAAK,CAAC,mBAAmB;QACnD;QAEA,OAAO;YAAE;YAAM;YAAe;QAAkB;IAClD;IAEA,MAAM,yBAAyB,CAAC,YAAoB,cAAsB,UAAkB;QAC1F,MAAM,cAAc,eAAe;QACnC,MAAM,SAAS,cAAc,YAAY,cAAc,UAAU,QAAQ,cAAc;QAEvF,IAAI,QAAkB;YACpB,CAAC,+CAA+C,CAAC;YACjD,CAAC,KAAK,EAAE,aAAa,OAAO,CAAC,GAAG,MAAM,EAAE,WAAW,OAAO,CAAC,GAAG,GAAG,CAAC;YAClE,CAAC,KAAK,EAAE,YAAY,OAAO,CAAC,IAAI;YAChC,CAAC,oBAAoB,EAAE,OAAO,aAAa,CAAC,OAAO,CAAC,IAAI;YACxD,CAAC,sBAAsB,EAAE,SAAS,qCAAqC,CAAC;YACxE,CAAC,KAAK,EAAE,SAAS,IAAI,EAAE,YAAY,OAAO,CAAC,GAAG,GAAG,EAAE,OAAO,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YACrF,CAAC,KAAK,EAAE,CAAC,WAAW,KAAK,GAAG,CAAC,aAAa,OAAO,aAAa,CAAC,EAAE,OAAO,CAAC,GAAG,GAAG,CAAC;SACjF;QAED,uBAAuB;QACvB,IAAI,iBAAiB,GAAG;YACtB,MAAM,IAAI,CAAC,CAAC,iCAAiC,EAAE,CAAC,CAAC,MAAM,cAAc,IAAI,GAAG,EAAE,OAAO,CAAC,IAAI;QAC5F;QACA,IAAI,kBAAkB,GAAG;YACvB,MAAM,IAAI,CAAC,CAAC,iCAAiC,EAAE,CAAC,kBAAkB,GAAG,EAAE,OAAO,CAAC,IAAI;QACrF;QACA,IAAI,iBAAiB,KAAK,iBAAiB,KAAK;YAC9C,MAAM,IAAI,CAAC,CAAC,iCAAiC,EAAE,CAAC,IAAK,CAAC,MAAM,cAAc,IAAI,GAAI,EAAE,OAAO,CAAC,IAAI;QAClG;QACA,IAAI,qBAAqB,GAAG;YAC1B,MAAM,IAAI,CAAC,CAAC,qCAAqC,EAAE,CAAC,IAAI,KAAK,KAAK,CAAC,mBAAmB,EAAE,OAAO,CAAC,IAAI;QACtG;QAEA,MAAM,IAAI,CAAC,CAAC,aAAa,EAAE,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC;QAEtD,OAAO;IACT;IAEA,MAAM,gBAAgB;QACpB,MAAM,gBAAgB,OAAO;QAC7B,MAAM,kBAAkB,OAAO;QAC/B,MAAM,cAAc,OAAO;QAC3B,MAAM,SAAS,cAAc,eAAe,iBAAiB,aAAa,eAAe,cAAc;QACvG,kBAAkB,OAAO,IAAI;QAE7B,2BAA2B;QAC3B,oBAAoB;YAClB,aAAa,kBAAkB;YAC/B,cAAc,KAAK,GAAG,CAAC,kBAAkB,eAAe,OAAO,aAAa;YAC5E,gBAAgB,OAAO,IAAI;YAC3B,WAAW,OAAO,IAAI,GAAG,OAAO;YAChC,OAAO,uBAAuB,eAAe,iBAAiB,aAAa;QAC7E;QAEA,+BAA+B;QAC/B,MAAM,SAAS,EAAE;QACjB,MAAM,SAAS,KAAK,KAAK,CAAC,OAAQ,MAAM;QACxC,MAAM,SAAS,KAAK,KAAK,CAAC,OAAQ,SAAS;QAC3C,MAAM,QAAQ;QAEd,IAAK,IAAI,IAAI,GAAG,KAAK,OAAO,IAAK;YAC/B,MAAM,OAAO,CAAC,SAAS,MAAM,IAAI;YACjC,MAAM,SAAS,KAAK,GAAG,CAAC,IAAI,SAAS,OAAO;YAC5C,OAAO,IAAI,CAAC;gBACV,QAAQ,OAAO,OAAO,OAAO,CAAC;gBAC9B,MAAM,cAAc,eAAe,QAAQ,aAAa,eAAe,cAAc,cAAc,IAAI;gBACvG,MAAM;YACR;QACF;QAEA,6BAA6B;QAC7B,OAAO,OAAO,CAAC,SAAS,OAAO,CAAC,CAAC,CAAC,KAAK,OAAO;YAC5C,OAAO,IAAI,CAAC;gBACV,QAAQ,OAAO,MAAM;gBACrB,MAAM,cAAc,eAAe,OAAO,MAAM,EAAE,aAAa,eAAe,cAAc,cAAc,IAAI;gBAC9G,MAAM,OAAO,IAAI;YACnB;QACF;QAEA,aAAa;IACf;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;0BAAE;YACR;QACF;yBAAG;QAAC;QAAc;QAAc;QAAc;QAAc;QAAU;QAClE;QAAgB;QAAiB;QAAgB;KAAe;IAEpE,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;0BAAE;YACR,IAAI,YAAY;gBACd,SAAS,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC;YACzC,OAAO;gBACL,SAAS,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC;YAC5C;QACF;yBAAG;QAAC;KAAW;IAEf,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAK,WAAU;0BACd,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC,mIAAA,CAAA,OAAI;;8CACH,6LAAC,mIAAA,CAAA,aAAU;oCAAC,WAAU;;sDACpB,6LAAC;4CAAI,WAAU;;8DACb,6LAAC,mIAAA,CAAA,YAAS;oDAAC,WAAU;8DAAW;;;;;;8DAChC,6LAAC;oDAAI,WAAU;;sEACb,6LAAC,sIAAA,CAAA,UAAO;;8EACN,6LAAC,sIAAA,CAAA,iBAAc;oEAAC,OAAO;8EACrB,cAAA,6LAAC,qIAAA,CAAA,SAAM;wEAAC,SAAQ;wEAAQ,MAAK;wEAAO,WAAU;kFAC5C,cAAA,6LAAC,qMAAA,CAAA,OAAI;4EAAC,WAAU;;;;;;;;;;;;;;;;8EAGpB,6LAAC,sIAAA,CAAA,iBAAc;oEAAC,WAAU;oEAAgB,OAAM;8EAC9C,cAAA,6LAAC;wEAAI,WAAU;;0FACb,6LAAC;gFAAG,WAAU;0FAA2B;;;;;;0FACzC,6LAAC;0FAAE;;;;;;0FAEH,6LAAC;0FAAE;;;;;;0FAEH,6LAAC;0FAAE;;;;;;0FAEH,6LAAC;gFAAE,WAAU;0FAAmB;;;;;;0FAChC,6LAAC;0FAAE;;;;;;0FAEH,6LAAC;gFAAE,WAAU;0FAAgC;;;;;;;;;;;;;;;;;;;;;;;sEAInD,6LAAC,qIAAA,CAAA,SAAM;4DACL,SAAQ;4DACR,MAAK;4DACL,SAAS,IAAM,cAAc,CAAC;4DAC9B,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,gBACA,cAAc;sEAGf,2BAAa,6LAAC,mMAAA,CAAA,MAAG;gEAAC,WAAU;;;;;qFAAe,6LAAC,qMAAA,CAAA,OAAI;gEAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;sDAIlE,6LAAC,mIAAA,CAAA,kBAAe;sDAAC;;;;;;;;;;;;8CAInB,6LAAC,mIAAA,CAAA,cAAW;;sDACV,6LAAC,mIAAA,CAAA,OAAI;4CAAC,cAAa;4CAAQ,WAAU;;8DACnC,6LAAC,mIAAA,CAAA,WAAQ;oDAAC,WAAU;;sEAClB,6LAAC,mIAAA,CAAA,cAAW;4DAAC,OAAM;sEAAQ;;;;;;sEAC3B,6LAAC,mIAAA,CAAA,cAAW;4DAAC,OAAM;sEAAW;;;;;;;;;;;;8DAEhC,6LAAC,mIAAA,CAAA,cAAW;oDAAC,OAAM;8DACjB,cAAA,6LAAC;wDAAI,WAAU;;0EACb,6LAAC;gEAAI,WAAU;;kFACb,6LAAC;wEAAI,WAAU;;0FACb,6LAAC,oIAAA,CAAA,QAAK;gFAAC,SAAQ;0FAAe;;;;;;0FAC9B,6LAAC,qIAAA,CAAA,SAAM;gFAAC,OAAO;gFAAc,eAAe;;kGAC1C,6LAAC,qIAAA,CAAA,gBAAa;wFAAC,IAAG;kGAChB,cAAA,6LAAC,qIAAA,CAAA,cAAW;4FAAC,aAAY;;;;;;;;;;;kGAE3B,6LAAC,qIAAA,CAAA,gBAAa;kGACX,OAAO,OAAO,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,KAAK,OAAO,iBACzC,6LAAC,qIAAA,CAAA,aAAU;gGAAW,OAAO;;oGAC1B,OAAO,IAAI;oGAAC;oGAAG,OAAO,MAAM;oGAAC;;+FADf;;;;;;;;;;;;;;;;0FAMvB,6LAAC,oIAAA,CAAA,QAAK;gFAAC,SAAQ;0FAAe;;;;;;0FAC9B,6LAAC,oIAAA,CAAA,QAAK;gFACJ,IAAG;gFACH,MAAK;gFACL,OAAO;gFACP,UAAU,CAAC,IAAM,gBAAgB,EAAE,MAAM,CAAC,KAAK;gFAC/C,KAAI;gFACJ,MAAK;gFACL,aAAY;;;;;;0FAEd,6LAAC,oIAAA,CAAA,QAAK;gFAAC,SAAQ;0FAAW;;;;;;0FAC1B,6LAAC,oIAAA,CAAA,QAAK;gFACJ,IAAG;gFACH,MAAK;gFACL,OAAO;gFACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;gFAC3C,KAAI;gFACJ,MAAK;gFACL,aAAY;;;;;;;;;;;;kFAGhB,6LAAC;wEAAI,WAAU;;0FACb,6LAAC,oIAAA,CAAA,QAAK;gFAAC,SAAQ;0FAAe;;;;;;0FAC9B,6LAAC,qIAAA,CAAA,SAAM;gFAAC,OAAO;gFAAc,eAAe;;kGAC1C,6LAAC,qIAAA,CAAA,gBAAa;wFAAC,IAAG;kGAChB,cAAA,6LAAC,qIAAA,CAAA,cAAW;4FAAC,aAAY;;;;;;;;;;;kGAE3B,6LAAC,qIAAA,CAAA,gBAAa;kGACX,OAAO,OAAO,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,KAAK,OAAO,iBACzC,6LAAC,qIAAA,CAAA,aAAU;gGAAW,OAAO;;oGAC1B,OAAO,IAAI;oGAAC;oGAAG,OAAO,MAAM;oGAAC;;+FADf;;;;;;;;;;;;;;;;0FAMvB,6LAAC,oIAAA,CAAA,QAAK;gFAAC,SAAQ;0FAAe;;;;;;0FAC9B,6LAAC,oIAAA,CAAA,QAAK;gFACJ,IAAG;gFACH,MAAK;gFACL,OAAO;gFACP,UAAU,CAAC,IAAM,gBAAgB,EAAE,MAAM,CAAC,KAAK;gFAC/C,KAAI;gFACJ,MAAK;gFACL,aAAY;;;;;;0FAEd,6LAAC;gFAAI,WAAU;;kGACb,6LAAC,oIAAA,CAAA,QAAK;kGAAC;;;;;;kGACP,6LAAC;wFAAI,WAAU;kGACZ,mBAAmB,OAAO,GAAG,eAAe,OAAO,CAAC,GAAG,GAAG,CAAC,GAAG;;;;;;;;;;;;;;;;;;;;;;;;0EAMvE,6LAAC;gEAAI,WAAU;;kFACb,6LAAC,oIAAA,CAAA,QAAK;wEAAC,SAAQ;kFAAgB;;;;;;kFAC/B,6LAAC,qIAAA,CAAA,SAAM;wEAAC,OAAO;wEAAe,eAAe;;0FAC3C,6LAAC,qIAAA,CAAA,gBAAa;gFAAC,IAAG;0FAChB,cAAA,6LAAC,qIAAA,CAAA,cAAW;oFAAC,aAAY;;;;;;;;;;;0FAE3B,6LAAC,qIAAA,CAAA,gBAAa;;kGACZ,6LAAC,qIAAA,CAAA,aAAU;wFAAC,OAAM;kGAAa;;;;;;kGAC/B,6LAAC,qIAAA,CAAA,aAAU;wFAAC,OAAM;kGAAc;;;;;;kGAChC,6LAAC,qIAAA,CAAA,aAAU;wFAAC,OAAM;kGAAW;;;;;;kGAC7B,6LAAC,qIAAA,CAAA,aAAU;wFAAC,OAAM;kGAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8DAM1C,6LAAC,mIAAA,CAAA,cAAW;oDAAC,OAAM;8DACjB,cAAA,6LAAC;wDAAI,WAAU;;0EACb,6LAAC;gEAAI,WAAU;;kFACb,6LAAC;wEAAI,WAAU;;0FACb,6LAAC,oIAAA,CAAA,QAAK;gFAAC,SAAQ;0FAAiB;;;;;;0FAChC,6LAAC,oIAAA,CAAA,QAAK;gFACJ,IAAG;gFACH,MAAK;gFACL,OAAO;gFACP,UAAU,CAAC,IAAM,kBAAkB,OAAO,EAAE,MAAM,CAAC,KAAK;gFACxD,KAAI;gFACJ,KAAI;gFACJ,MAAK;gFACL,aAAY;;;;;;;;;;;;kFAGhB,6LAAC;wEAAI,WAAU;;0FACb,6LAAC,oIAAA,CAAA,QAAK;gFAAC,SAAQ;0FAAkB;;;;;;0FACjC,6LAAC,oIAAA,CAAA,QAAK;gFACJ,IAAG;gFACH,MAAK;gFACL,OAAO;gFACP,UAAU,CAAC,IAAM,mBAAmB,OAAO,EAAE,MAAM,CAAC,KAAK;gFACzD,KAAI;gFACJ,KAAI;gFACJ,MAAK;gFACL,aAAY;;;;;;;;;;;;;;;;;;0EAIlB,6LAAC;gEAAI,WAAU;;kFACb,6LAAC;wEAAI,WAAU;;0FACb,6LAAC,oIAAA,CAAA,QAAK;gFAAC,SAAQ;0FAAiB;;;;;;0FAChC,6LAAC,oIAAA,CAAA,QAAK;gFACJ,IAAG;gFACH,MAAK;gFACL,OAAO;gFACP,UAAU,CAAC,IAAM,kBAAkB,OAAO,EAAE,MAAM,CAAC,KAAK;gFACxD,KAAI;gFACJ,KAAI;gFACJ,MAAK;gFACL,aAAY;;;;;;;;;;;;kFAGhB,6LAAC;wEAAI,WAAU;;0FACb,6LAAC,oIAAA,CAAA,QAAK;gFAAC,SAAQ;0FAAqB;;;;;;0FACpC,6LAAC,oIAAA,CAAA,QAAK;gFACJ,IAAG;gFACH,MAAK;gFACL,OAAO;gFACP,UAAU,CAAC,IAAM,sBAAsB,OAAO,EAAE,MAAM,CAAC,KAAK;gFAC5D,KAAI;gFACJ,MAAK;gFACL,aAAY;;;;;;;;;;;;;;;;;;0EAIlB,6LAAC;gEAAI,WAAU;;kFACb,6LAAC,oIAAA,CAAA,QAAK;wEAAC,SAAQ;kFAAkB;;;;;;kFACjC,6LAAC,oIAAA,CAAA,QAAK;wEACJ,IAAG;wEACH,MAAK;wEACL,OAAO;wEACP,UAAU,CAAC,IAAM,mBAAmB,OAAO,EAAE,MAAM,CAAC,KAAK;wEACzD,KAAI;wEACJ,MAAK;wEACL,aAAY;;;;;;;;;;;;0EAGhB,6LAAC;gEAAI,WAAU;;kFACb,6LAAC,oIAAA,CAAA,QAAK;wEAAC,SAAQ;kFAAO;;;;;;kFACtB,6LAAC,oIAAA,CAAA,QAAK;wEACJ,IAAG;wEACH,MAAK;wEACL,OAAO;wEACP,UAAU,CAAC,IAAM,QAAQ,OAAO,EAAE,MAAM,CAAC,KAAK;wEAC9C,MAAK;wEACL,aAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sDAOtB,6LAAC;4CAAI,WAAU;;8DACf,6LAAC,mIAAA,CAAA,OAAI;;sEACH,6LAAC,mIAAA,CAAA,aAAU;sEACT,cAAA,6LAAC,mIAAA,CAAA,YAAS;0EAAC;;;;;;;;;;;sEAEb,6LAAC,mIAAA,CAAA,cAAW;sEACV,cAAA,6LAAC;gEAAI,WAAU;;kFACb,6LAAC;wEAAI,WAAU;;0FACb,6LAAC;;kGACC,6LAAC,oIAAA,CAAA,QAAK;kGAAC;;;;;;kGACP,6LAAC;wFAAI,WAAU;kGACZ,OAAO,CAAC,aAAqC,CAAC,IAAI;;;;;;kGAErD,6LAAC;wFAAI,WAAU;;4FACZ,OAAO,CAAC,aAAqC,CAAC,MAAM;4FAAC;;;;;;;;;;;;;0FAG1D,6LAAC;;kGACC,6LAAC,oIAAA,CAAA,QAAK;kGAAC;;;;;;kGACP,6LAAC;wFAAI,WAAU;kGACZ,OAAO,CAAC,aAAqC,CAAC,IAAI;;;;;;kGAErD,6LAAC;wFAAI,WAAU;;4FACZ,OAAO,CAAC,aAAqC,CAAC,MAAM;4FAAC;;;;;;;;;;;;;;;;;;;oEAK3D,gBAAgB,OAAO,oBAAoB,KAAK,kCAC/C,6LAAC;;0FACC,6LAAC,oIAAA,CAAA,QAAK;0FAAC;;;;;;0FACP,6LAAC;gFAAI,WAAU;;oFACZ,iBAAiB,SAAS,CAAC,OAAO,CAAC;oFAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8DAQnD,6LAAC,mIAAA,CAAA,OAAI;oDAAC,WAAU;8DACd,cAAA,6LAAC,mIAAA,CAAA,cAAW;wDAAC,WAAU;kEACrB,cAAA,6LAAC;4DAAI,WAAU;;8EACb,6LAAC;oEAAI,WAAU;;sFACb,6LAAC,qIAAA,CAAA,SAAM;4EACL,IAAG;4EACH,SAAS;4EACT,iBAAiB;4EACjB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,cACA,cAAc;;;;;;sFAGlB,6LAAC,oIAAA,CAAA,QAAK;4EAAC,SAAQ;sFAAW;;;;;;;;;;;;gEAE3B,8BACC,6LAAC;oEAAI,WAAU;8EACb,cAAA,6LAAC,oIAAA,CAAA,QAAK;wEACJ,IAAG;wEACH,OAAO;wEACP,UAAU;wEACV,MAAK;wEACL,KAAI;wEACJ,MAAK;wEACL,aAAY;wEACZ,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iBACA,cAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;8DAS5B,6LAAC,mIAAA,CAAA,OAAI;;sEACH,6LAAC,mIAAA,CAAA,aAAU;sEACT,cAAA,6LAAC,mIAAA,CAAA,YAAS;0EAAC;;;;;;;;;;;sEAEb,6LAAC,mIAAA,CAAA,cAAW;sEACV,cAAA,6LAAC;gEAAI,WAAU;;oEACZ,kBAAkB,OAAO,IAAI,CAAC,MAAM,sBACnC,6LAAC;4EAAc,WAAU;sFAA0B;2EAA3C;;;;;oEAET,gBAAgB,OAAO,oBAAoB,KAAK,kCAC/C,6LAAC;wEAAE,WAAU;kFACV,GAAG,iBAAiB,KAAK,CAAC,MAAM,GAAG,EAAE,6BAA6B,EAAE,iBAAiB,cAAc,CAAC,OAAO,CAAC,GAAG,GAAG,EAAE,eAAe,GAAG,EAAE,iBAAiB,SAAS,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sCAUnM,6LAAC,mIAAA,CAAA,OAAI;4BAAC,WAAU;;8CACd,6LAAC,mIAAA,CAAA,aAAU;8CACT,cAAA,6LAAC,mIAAA,CAAA,YAAS;kDAAC;;;;;;;;;;;8CAEb,6LAAC,mIAAA,CAAA,cAAW;oCAAC,WAAU;8CACrB,cAAA,6LAAC,sKAAA,CAAA,sBAAmB;wCAAC,OAAM;wCAAO,QAAO;kDACvC,cAAA,6LAAC,wJAAA,CAAA,YAAS;4CACR,MAAM;4CACN,QAAQ;gDAAE,KAAK;gDAAI,OAAO;gDAAI,MAAM;gDAAI,QAAQ;4CAAG;;8DAEnD,6LAAC,gKAAA,CAAA,gBAAa;oDACZ,iBAAgB;oDAChB,QAAQ,aAAa,SAAS;;;;;;8DAEhC,6LAAC,wJAAA,CAAA,QAAK;oDACJ,SAAQ;oDACR,MAAK;oDACL,OAAM;oDACN,QAAQ;wDAAC;wDAAQ;qDAAO;oDACxB,MAAM;wDAAE,UAAU;oDAAG;oDACrB,eAAe,CAAC;wDACd,MAAM,SAAS,OAAO,MAAM,CAAC,SAAS,IAAI,CAAC,CAAA,IAAK,KAAK,GAAG,CAAC,EAAE,MAAM,GAAG,SAAS;wDAC7E,OAAO,SAAS,OAAO,IAAI,GAAG;oDAChC;oDACA,OAAO;oDACP,YAAW;oDACX,QAAQ;oDACR,UAAU;oDACV,OAAO,OAAO,MAAM,CAAC,SAAS,GAAG,CAAC,CAAA,IAAK,EAAE,MAAM;;;;;;8DAEjD,6LAAC,wJAAA,CAAA,QAAK;oDACJ,MAAK;oDACL,QAAQ;wDAAC;wDAAQ;qDAAO;oDACxB,MAAM;wDAAE,UAAU;oDAAG;oDACrB,eAAe,CAAC,QAAU,GAAG,MAAM,OAAO,CAAC,GAAG,GAAG,CAAC;;;;;;8DAEpD,6LAAC,0JAAA,CAAA,UAAO;oDACN,cAAc;wDACZ,iBAAiB,aAAa,YAAY;wDAC1C,QAAQ,aAAa,sBAAsB;wDAC3C,cAAc;wDACd,OAAO,aAAa,YAAY;oDAClC;oDACA,WAAW;wDACT,OAAO,aAAa,YAAY;oDAClC;oDACA,YAAY;wDACV,OAAO,aAAa,YAAY;wDAChC,cAAc;oDAChB;oDACA,WAAW,CAAC,QAAkB;4DAAC,GAAG,MAAM,OAAO,CAAC,GAAG,GAAG,CAAC;4DAAE;yDAAO;oDAChE,gBAAgB,CAAC;wDACf,MAAM,SAAS,OAAO,MAAM,CAAC,SAAS,IAAI,CAAC,CAAA,IAAK,KAAK,GAAG,CAAC,EAAE,MAAM,GAAG,UAAU;wDAC9E,OAAO,CAAC,QAAQ,EAAE,OAAO,OAAO,CAAC,GAAG,GAAG,EAAE,SAAS,CAAC,EAAE,EAAE,OAAO,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI;oDAC9E;;;;;;8DAEF,6LAAC,yJAAA,CAAA,SAAM;oDACL,cAAc;wDACZ,UAAU;wDACV,WAAW;wDACX,OAAO,aAAa,YAAY;oDAClC;oDACA,eAAc;oDACd,OAAM;oDACN,QAAQ;oDACR,UAAU;;;;;;8DAEZ,6LAAC,uJAAA,CAAA,OAAI;oDACH,MAAK;oDACL,SAAQ;oDACR,QAAO;oDACP,MAAM,GAAG,cAAc,MAAM,CAAC,GAAG,WAAW,KAAK,cAAc,KAAK,CAAC,GAAG,QAAQ,CAAC;oDACjF,KAAK,CAAC;wDACJ,MAAM,EAAE,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,GAAG;wDACnC,MAAM,WAAW,OAAO,MAAM,CAAC,SAAS,IAAI,CAAC,CAAA,IAAK,KAAK,GAAG,CAAC,EAAE,MAAM,GAAG,QAAQ,MAAM,IAAI;wDACxF,IAAI,CAAC,UAAU,OAAO;wDACtB,qBACE,6LAAC;4DAEC,IAAI;4DACJ,IAAI;4DACJ,GAAG;4DACH,MAAK;4DACL,QAAO;4DACP,aAAa;2DANR,CAAC,IAAI,EAAE,OAAO;;;;;oDASzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAQZ,6LAAC;gBAAO,WAAU;0BAAiD;;;;;;;;;;;;AAKzE;GA9qBwB;KAAA"}},
    {"offset": {"line": 1897, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}